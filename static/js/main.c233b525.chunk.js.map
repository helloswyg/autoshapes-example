{"version":3,"sources":["components/TextBoxExample/TextBoxExample.module.css","components/Hero/Hero.module.css","components/App/App.module.css","components/ShapeComponents/SideBlob.module.css","components/Header/Header.tsx","components/Footer/Footer.tsx","lib/shapelib/core.ts","lib/shapelib/Components/ShapeComponent.tsx","lib/shapelib/Components/Blob.tsx","lib/shapelib/utils.ts","lib/shapelib/library.ts","theme.ts","components/Hero/Hero.tsx","components/Base/Section/Section.tsx","components/ShapeComponents/SideBlob.tsx","components/Base/CodeBlock/CodeBlock.tsx","components/HowTo/HowTo.tsx","components/Base/Gallery/Gallery.tsx","components/ShapeComponents/ShapeGallery.tsx","components/VariationsGallery/VariationsGallery.tsx","components/Base/TextBlock/TextBlock.tsx","components/TextBoxExample/TextBoxExample.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Header","className","Footer","ShapeKind","isGradientSpec","spec","includes","type","defaultShapeProps","kind","CLOSED","complexity","smoothness","variability","seed","path","defaultDrawShapeProps","fill","color","opacity","stroke","width","rotate","drawShape","params","allParams","pathArray","LOOPY","WAVY","library","loopyLine","numElements","baseRadius","closedPath","numPoints","PathArray","getShape","draw","SVG","addTo","element","size","transformed","utils","filledPath","gradientParams","block","gradient","orientation","bbox","bboxExpanded","x","y","margin","height","viewbox","e","ShapeComponent","props","refToDiv","useRef","useEffect","current","ref","textContent","style","zIndex","Blob","smooth","flattenedArray","flat","console","log","length","slice","Error","flip","how","numberCounter","index","flipY","flipX","flipXY","scale","factor","value","noise","rng","seedrandom","small","big","toPointArray","output","concat","PointArray","bend","lastX","r","Math","sqrt","angle","PI","newX","cos","sin","newY","pathCompose","segments","modifier","p","forEach","segment","flattenedOutput","flattenedSegment","quickDrawPath","elementID","simpleLinearGradient","stops","gradientSpec","add","i","stop","loopSegment","reverseLoopSegment","curveSegment90","reverseCurveSegment90","curveSegment45","reverseCurveSegment45","connectorSegment","reverseConnectorSegment","horizontalrSegment","basicBlocks","loop","crest","l","connector","twistConnector","drop","compositeShapes","nPointRadial","radialDistances","offset","numSegments","deltaR","controlpointLength","abs","dX","dY","controlPointX","controlPointY","oddNumberedBaseRadius","radii","Array","currentBaseRadius","blob2","blob3","blob4","blob5","closedShapes","baseTheme","createTheme","typography","h1","fontSize","h2","h3","textAlign","fontWeight","body1","overline","lineHeight","palette","background","default","paper","primary","main","secondary","contrastThreshold","tonalOffset","components","MuiButton","defaultProps","variant","theme","responsiveFontSizes","code","fontFamily","letterSpacing","breakpoints","up","shapeProps","light","toString","Hero","title","subTitle","buttons","Container","styles","heroOuterDiv","Box","blobContainer","sx","xs","md","Typography","Section","display","justifyContent","alignItems","minHeight","padding","position","SideBlob","sideblob","CodeBlock","useTheme","Paper","spacing","overflow","grey","whiteSpace","Grid","container","item","sm","docsURL","Button","href","onClick","navigator","clipboard","writeText","HowToBlock","url","HowTo","GalleryItem","minWidth","children","Gallery","items","map","ShapeItem","Stack","name","shape","ShapeGallery","paddingLeft","shapes","secondaryColor","primaryColor","geometricParams","geometricSet","smoothingParams","smoothingSet","complexVariableParams","complexVariableSet","fillVariationsParams","fillVariationsSet","VariationsGallery","TextBlock","blobProps","TextBoxExample","primaryLight","dark","secondaryGradient","primaryGradient","blob1","App","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.c233b525.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blob1\":\"TextBoxExample_blob1__3wwYA\",\"blob2\":\"TextBoxExample_blob2__S3WIj\",\"blob3\":\"TextBoxExample_blob3__1NU__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heroOuterDiv\":\"Hero_heroOuterDiv__OEvcs\",\"blobContainer\":\"Hero_blobContainer__2lpVL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideblob\":\"SideBlob_sideblob__31TX9\"};","export function Header() {\n  return <div className=\"header\"></div>;\n}\n","export function Footer() {\n  return <div className=\"footer\"></div>;\n}\n\nexport default Footer;\n","import { Container, FillData, Gradient, PathArray, StrokeData, SVG, Svg } from '@svgdotjs/svg.js';\nimport { library, utils } from '.';\n\n// Type definitions /////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport enum ShapeKind {\n  WAVY,\n  LOOPY,\n  CLOSED,\n}\n\nexport interface PathProps {\n  kind: ShapeKind;\n  complexity?: number;\n  smoothness?: number;\n  variability?: number;\n  seed?: number;\n  path?: PathArray | null;\n}\n\nexport interface GradientSpec {\n  type: string;\n  block: (stop: Gradient) => void;\n  orientation?: number;\n}\n\nfunction isGradientSpec(spec: any): spec is GradientSpec {\n  if (!('type' in spec)) return false;\n  if (!('block' in spec)) return false;\n  return ['linear', 'radial'].includes((spec as GradientSpec).type);\n}\n\nexport type StyleProps = {\n  fill?: FillData | string | GradientSpec;\n  stroke?: StrokeData | string | GradientSpec;\n  rotate?: number;\n};\n\nexport type Element = {\n  element: HTMLElement | string;\n};\n\nexport type ShapeProps = PathProps & StyleProps;\nexport type DrawShapeParams = Element & PathProps & StyleProps;\n\n// Default Values /////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const defaultShapeProps: Required<PathProps> = {\n  kind: ShapeKind.CLOSED,\n  complexity: 4,\n  smoothness: 1,\n  variability: 1,\n  seed: 1,\n  path: null,\n};\n\nexport const defaultStyleProps: Required<StyleProps> = {\n  fill: { color: '#000', opacity: 0.0 },\n  stroke: { color: 'black', width: 3, opacity: 0.8 },\n  rotate: 0,\n};\n\nexport const defaultDrawShapeProps = { ...defaultShapeProps, ...defaultStyleProps };\n\n// Function implementations /////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport function getShape(params: PathProps) {\n  const allParams: Required<PathProps> = { ...defaultShapeProps, ...params };\n  if (allParams.path !== null) return allParams.path;\n\n  switch (allParams.kind) {\n    case ShapeKind.LOOPY:\n      // TODO: make loopy line procedural\n      return library.loopyLine({\n        numElements: allParams.complexity,\n        variability: allParams.variability,\n        smoothness: allParams.smoothness,\n        baseRadius: 100,\n      });\n    case ShapeKind.WAVY:\n      // TODO: implemeny wavy line\n      return library.loopyLine({\n        numElements: allParams.complexity,\n        variability: allParams.variability,\n        smoothness: allParams.smoothness,\n        baseRadius: 100,\n      });\n    case ShapeKind.CLOSED:\n      return library.closedPath({\n        numPoints: allParams.complexity,\n        variability: allParams.variability,\n        smoothness: allParams.smoothness,\n        baseRadius: 100,\n      });\n    default:\n      break;\n  }\n  return new PathArray();\n}\n\nexport function drawShape(params: DrawShapeParams) {\n  const allParams: Required<DrawShapeParams> = { ...defaultDrawShapeProps, ...params };\n  const pathArray = getShape(allParams as PathProps);\n  const draw: Svg = SVG().addTo(allParams.element).size('100%', '100%');\n  const transformed = utils.rotate(pathArray, allParams.rotate);\n  let path = draw.path(transformed);\n  let filledPath = path;\n\n  // some verbose language to be allowed to use overloaded \"fill\" function with union types\n  if (typeof allParams.fill === 'string') {\n    filledPath = path.fill(allParams.fill as string);\n  } else if (isGradientSpec(allParams.fill)) {\n    const gradientParams: Parameters<Container['gradient']> = [allParams.fill.type, allParams.fill.block];\n    const gradient = draw.gradient(...gradientParams).rotate(allParams.fill.orientation || 0);\n    filledPath = path.fill(gradient);\n  } else {\n    filledPath = path.fill(allParams.fill);\n  }\n\n  if (typeof allParams.stroke === 'string') {\n    path = filledPath.stroke(allParams.stroke as string);\n  } else if (isGradientSpec(allParams.stroke)) {\n    const gradientParams: Parameters<Container['gradient']> = [allParams.stroke.type, allParams.stroke.block];\n    const gradient = draw.gradient(...gradientParams).rotate(allParams.stroke.orientation || 0);\n    filledPath = path.fill(gradient);\n  } else {\n    path = filledPath.stroke(allParams.stroke as StrokeData);\n  }\n\n  // set viewport for svg to bounding box + margin\n  try {\n    const bbox = path.bbox();\n\n    const margin = 4;\n    const bboxExpanded = {\n      x: bbox.x - margin,\n      y: bbox.y - margin,\n      width: bbox.width + margin * 2,\n      height: bbox.height + margin * 2,\n    };\n    draw.viewbox({ ...bboxExpanded });\n  } catch (e) {\n    //TODO: do something to get an alternative bounding box\n    // this is currently only a problem in jest. Real browsers do fine.\n  }\n\n  return path;\n}\n","import React, { useEffect, useRef } from 'react';\nimport { drawShape, ShapeProps } from '../core';\n\nexport type ShapeComponentProps = ShapeProps & React.HTMLAttributes<HTMLElement>;\n\nexport const ShapeComponent: React.FC<ShapeComponentProps> = (props) => {\n  const refToDiv = useRef(null);\n\n  useEffect(() => {\n    if (refToDiv.current) {\n      const ref = refToDiv.current as HTMLElement;\n      ref.textContent = '';\n      drawShape({ element: ref, ...props });\n    }\n  });\n\n  return <div ref={refToDiv} style={{ width: '100%', height: '100%', zIndex: -1 }} {...props} />;\n};\n","import { ShapeKind } from '..';\nimport { ShapeComponent, ShapeComponentProps } from './ShapeComponent';\n\nexport type BlobProps = Omit<ShapeComponentProps, 'kind'>;\n\nexport const Blob: React.FC<BlobProps> = (props) => <ShapeComponent kind={ShapeKind.CLOSED} {...props} />;\n","import { Path, PathArray, PointArray, Svg, SVG } from '@svgdotjs/svg.js';\nimport seedrandom from 'seedrandom';\nimport { GradientSpec } from '.';\n\nexport function smooth(pathArray: PathArray): PathArray {\n  let flattenedArray = pathArray.flat();\n  console.log(flattenedArray);\n  if (flattenedArray.length === 0) return new PathArray();\n  if (flattenedArray[0] === 'S') {\n    return pathArray;\n  }\n  if (flattenedArray[0] === 'M') {\n    flattenedArray = flattenedArray.slice(3);\n  }\n  if (flattenedArray[0] === 'C') {\n    flattenedArray = flattenedArray.slice(2);\n    flattenedArray[0] = 'S';\n  } else {\n    throw new Error('Only cubic bezier curves are supported. ' + flattenedArray);\n  }\n  return new PathArray(flattenedArray);\n}\n\nexport function flip(pathArray: PathArray, how: 'x' | 'y'): PathArray {\n  let flattenedArray = pathArray.flat();\n  let numberCounter = 0;\n\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const element = flattenedArray[index];\n    if (typeof element === 'number') {\n      if (how === 'y') {\n        // if element is at an even-numbered position it's an x coordidante otherwise a y coordinate\n        flattenedArray[index] = numberCounter % 2 === 0 ? element : -element;\n      }\n      if (how === 'x') {\n        // if element is at an even-numbered position it's an x coordidante otherwise a y coordinate\n        flattenedArray[index] = numberCounter % 2 === 1 ? element : -element;\n      }\n      numberCounter += 1;\n    }\n  }\n  return new PathArray(flattenedArray);\n}\n\nexport function flipY(pathArray: PathArray): PathArray {\n  return flip(pathArray, 'y');\n}\n\nexport function flipX(pathArray: PathArray): PathArray {\n  return flip(pathArray, 'x');\n}\n\nexport function flipXY(pathArray: PathArray): PathArray {\n  return flip(flip(pathArray, 'x'), 'y');\n}\n\nexport function scale(pathArray: PathArray, factor: number): PathArray {\n  // scale path relative to 0,0 means we simply multiply all numbers by factor\n  let flattenedArray = pathArray.flat();\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const value = flattenedArray[index];\n    if (typeof value === 'number') {\n      flattenedArray[index] = value * factor;\n    }\n  }\n  return new PathArray(flattenedArray);\n}\n\nexport function noise(pathArray: PathArray, factor: number = 10, seed?: string): PathArray {\n  // TODO: adding noise to control points creates weird artifacts.\n  const rng = seedrandom(seed);\n  let flattenedArray = pathArray.flat();\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const value = flattenedArray[index];\n    if (typeof value === 'number') {\n      flattenedArray[index] = value + factor * rng();\n    }\n  }\n  return new PathArray(flattenedArray);\n}\n\nexport function small(pathArray: PathArray): PathArray {\n  return scale(pathArray, 0.5);\n}\n\nexport function big(pathArray: PathArray): PathArray {\n  return scale(pathArray, 2.0);\n}\n\nexport function toPointArray(pathArray: PathArray): PointArray {\n  let flattenedArray = pathArray.flat();\n  let output: number[] = [];\n\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const element = flattenedArray[index];\n    if (typeof element === 'number') {\n      output = output.concat(element);\n    }\n  }\n  return new PointArray(output);\n}\n\n/* \nRotate points around origin depending on their distance from the origin\n*/\nexport function bend(pathArray: PathArray): PathArray {\n  let flattenedArray = pathArray.flat();\n  let numberCounter = 0;\n  let lastX = 0;\n\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const element = flattenedArray[index];\n    if (typeof element === 'number') {\n      if (numberCounter % 2 === 0) {\n        // is x coordinate\n        lastX = element;\n      } else {\n        const x = lastX;\n        const y = element;\n        const r = Math.sqrt(x * x + y * y);\n        const angle = (2 * Math.PI * r) / 100000;\n        const newX = x * Math.cos(angle) - y * Math.sin(angle);\n        const newY = x * Math.sin(angle) + y * Math.cos(angle);\n        flattenedArray[index] = newY;\n        flattenedArray[index - 1] = newX;\n      }\n      numberCounter++;\n    }\n  }\n  return new PathArray(flattenedArray);\n}\n\n/* \nRotate all points around origin\nWe need to re-implement this because the transform operation messes up bounding boxes used to set the viewport\n*/\nexport function rotate(pathArray: PathArray, angle: number): PathArray {\n  let flattenedArray = pathArray.flat();\n  let numberCounter = 0;\n  let lastX = 0;\n\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const element = flattenedArray[index];\n    if (typeof element === 'number') {\n      if (numberCounter % 2 === 0) {\n        // is x coordinate\n        lastX = element;\n      } else {\n        const x = lastX;\n        const y = element;\n        const newX = x * Math.cos(angle) - y * Math.sin(angle);\n        const newY = x * Math.sin(angle) + y * Math.cos(angle);\n        flattenedArray[index] = newY;\n        flattenedArray[index - 1] = newX;\n      }\n      numberCounter++;\n    }\n  }\n  return new PathArray(flattenedArray);\n}\n\nexport function pathCompose(segments: PathArray[], modifier = (p: PathArray) => p): PathArray {\n  // we assume that the last two numbers in a path segment are the end point of the path so far.\n  // That end point will be the starting point of the next segment.\n  // each segment is encoded as if starting at 0,0 so the segment has to be translated to new coordinates before appending.\n  // let modifierFunc = smooth//(l:PathArray) => l\n  // if (modifier) modifierFunc = modifier\n\n  let output = new PathArray();\n  if (segments[0].flat()[0] !== 'M') {\n    output = output = new PathArray('M 0 0');\n  }\n\n  segments.forEach((segment) => {\n    const flattenedOutput = output.flat();\n    let flattenedSegment = segment.flat();\n    if (flattenedSegment[0] === 'M') flattenedSegment = flattenedSegment.slice(3);\n    const x = flattenedOutput[flattenedOutput.length - 2];\n    const y = flattenedOutput[flattenedOutput.length - 1];\n    let numberCounter = 0;\n\n    if (typeof x !== 'number' || typeof y !== 'number') return output;\n    for (let index = 0; index < flattenedSegment.length; index++) {\n      const element = flattenedSegment[index];\n      if (typeof element === 'number') {\n        // if element is at an even-numbered position it's an x coordidante otherwise a y coordinate\n        flattenedSegment[index] = element + (numberCounter % 2 === 0 ? x : y);\n        numberCounter += 1;\n      }\n    }\n    output = output.concat(modifier(new PathArray(flattenedSegment))) as PathArray;\n  });\n\n  return output;\n}\n\nexport function quickDrawPath(elementID: string, pathArray: PathArray): Path {\n  const draw: Svg = SVG().addTo(elementID).size('100%', '100%');\n  const path = draw.path(pathArray).fill('none').stroke({ color: '#000', width: 3 });\n  return path;\n}\n\nexport function simpleLinearGradient(stops: string[], orientation = 90) {\n  const gradientSpec: GradientSpec = {\n    type: 'linear',\n    block: (add) => {\n      for (let i = 0; i < stops.length; i++) {\n        add.stop(i / (stops.length - 1), stops[i]);\n      }\n    },\n    orientation,\n  };\n  return gradientSpec;\n}\n","import { PathArray } from '@svgdotjs/svg.js';\nimport seedrandom from 'seedrandom';\nimport { pathCompose, flipY, flipX, flipXY, small, big } from './utils';\nexport type pathLibrary = { [key: string]: PathArray };\n\n////////////////////////////////////////////////////////////////////////////////////\n// basic blocks\n////////////////////////////////////////////////////////////////////////////////////\nconst loopSegment = new PathArray('C 25 50 25 100 0 100');\nconst reverseLoopSegment = new PathArray('C 25 0 25 50 0 100');\nconst curveSegment90 = new PathArray('C 50 0 100 50 100 100');\nconst reverseCurveSegment90 = new PathArray('C 0 50 50 100 100 100');\nconst curveSegment45 = new PathArray('C 50 25 75 50 100 100');\nconst reverseCurveSegment45 = new PathArray('C 25 50 50 75 100 100');\nconst connectorSegment = new PathArray('C 50 25 90 25 100 25');\nconst reverseConnectorSegment = new PathArray('C 10 0 50 0 100 25');\nconst horizontalrSegment = new PathArray('C 25 0 25 0 25 0');\n\nexport const basicBlocks: pathLibrary = {\n  loopSegment,\n  reverseLoopSegment,\n  curveSegment45,\n  reverseCurveSegment45,\n  curveSegment90,\n  reverseCurveSegment90,\n  connectorSegment,\n  reverseConnectorSegment,\n  horizontalrSegment,\n};\n\n////////////////////////////////////////////////////////////////////////////////////\n// composite shapes\n////////////////////////////////////////////////////////////////////////////////////\nexport const loop = pathCompose([\n  curveSegment45,\n  loopSegment,\n  flipXY(reverseLoopSegment),\n  flipY(reverseCurveSegment45),\n]);\nexport const crest = pathCompose([curveSegment45, flipY(reverseCurveSegment45)], (l) => l);\nexport const connector = pathCompose([connectorSegment, flipY(reverseConnectorSegment)]);\nexport const twistConnector = pathCompose([connectorSegment, reverseConnectorSegment]);\nexport const drop = pathCompose([\n  curveSegment90,\n  flipX(loopSegment),\n  small(small(horizontalrSegment)),\n  flipY(reverseLoopSegment),\n  flipY(reverseCurveSegment90),\n]);\n\nexport const compositeShapes: pathLibrary = {\n  loop,\n  crest,\n  connector,\n  twistConnector,\n  drop,\n};\n\nexport interface LoopyLineParams {\n  numElements: number;\n  variability: number;\n  smoothness: number;\n  baseRadius: number;\n}\n\nexport function loopyLine(params: LoopyLineParams): PathArray {\n  // TODO: make loopy line procedural\n  return pathCompose([\n    new PathArray(['M 0 0']),\n    small(flipY(crest)),\n    twistConnector,\n    small(loop),\n    big(flipY(loop)),\n    connector,\n  ]);\n}\n\n////////////////////////////////////////////////////////////////////////////////////\n// closed shapes\n////////////////////////////////////////////////////////////////////////////////////\n\nexport function nPointRadial(radialDistances: number[], smoothness: number = 0.5): PathArray {\n  const offset = { x: 100, y: 100 };\n  let output = new PathArray(['M', offset.x, offset.y + radialDistances[0]]);\n  const numSegments = radialDistances.length;\n\n  for (let i = 1; i < radialDistances.length + 1; i++) {\n    const r = radialDistances[i % numSegments];\n    const deltaR = radialDistances[i % numSegments] - radialDistances[(i - 1) % numSegments];\n    const controlpointLength = (((Math.abs(deltaR) / r + 0.5) * smoothness * r) / numSegments) * 2 * Math.PI;\n    const x = r * Math.sin((i * 2 * Math.PI) / numSegments) + offset.x;\n    const y = r * Math.cos((i * 2 * Math.PI) / numSegments) + offset.y;\n    const dX = -Math.cos((i * 2 * Math.PI) / numSegments) * controlpointLength;\n    const dY = Math.sin((i * 2 * Math.PI) / numSegments) * controlpointLength;\n    const controlPointX = x + dX;\n    const controlPointY = y + dY;\n\n    if (i === 1) {\n      output = output.concat([\n        'C',\n        controlpointLength + offset.x,\n        radialDistances[0] + offset.y,\n        controlPointX,\n        controlPointY,\n        x,\n        y,\n      ]) as PathArray;\n    } else {\n      output = output.concat(['S', controlPointX, controlPointY, x, y]) as PathArray;\n    }\n  }\n\n  output = output.concat(['z']) as PathArray;\n\n  return output;\n}\n\nexport interface ClosedPathParams {\n  numPoints: number;\n  variability: number;\n  smoothness: number;\n  baseRadius: number;\n  seed?: string;\n}\n\nexport function closedPath(params: ClosedPathParams): PathArray {\n  const rng = seedrandom(params.seed);\n  const oddNumberedBaseRadius = params.baseRadius - params.variability;\n  const radii = new Array(params.numPoints);\n  for (let i = 0; i < params.numPoints; i++) {\n    const currentBaseRadius = i % 2 === 0 ? params.baseRadius : oddNumberedBaseRadius;\n    radii[i] = currentBaseRadius + (rng() - 0.5) * params.variability;\n  }\n  return nPointRadial(radii, params.smoothness);\n}\n\nexport const blob2 = nPointRadial([75, 75]);\nexport const blob3 = nPointRadial([75, 75, 20]);\nexport const blob4 = nPointRadial([75, 75, 20, 90]);\nexport const blob5 = nPointRadial([75, 75, 20, 100, 25]);\n\nexport const closedShapes: pathLibrary = {\n  blob2,\n  blob3,\n  blob4,\n  blob5,\n};\n","import { createTheme, responsiveFontSizes } from '@mui/material/styles';\n\ndeclare module '@mui/material/styles' {\n  interface TypographyVariants {\n    code: React.CSSProperties;\n  }\n\n  // allow configuration using `createTheme`\n  interface TypographyVariantsOptions {\n    code?: React.CSSProperties;\n  }\n\n  // type TypographyVariant = TypographyVariant | 'code'\n}\n\n// Update the Typography's variant prop options\ndeclare module '@mui/material/Typography' {\n  interface TypographyPropsVariantOverrides {\n    code: true;\n  }\n}\n\n// declare module '@mui/material/styles/createTypography' {\n//   interface Variant = Variant\n// }\n\nconst baseTheme = createTheme({\n  typography: {\n    h1: {\n      fontSize: '5rem',\n    },\n    h2: {\n      fontSize: '3rem',\n    },\n    h3: {\n      fontSize: '1.2rem',\n      textAlign: 'left',\n      fontWeight: 200,\n    },\n    body1: {\n      fontSize: '1.2rem',\n    },\n    overline: {\n      lineHeight: '1em',\n    },\n  },\n  palette: {\n    background: {\n      default: '#FEFCFA',\n      paper: '#FDFAF9',\n    },\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#FF003B',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#CE07FF',\n      // dark: will be calculated from palette.secondary.main,\n      // contrastText: '#ffcc00',\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n  components: {\n    MuiButton: {\n      defaultProps: {\n        variant: 'contained',\n      },\n    },\n  },\n  // spacing: 2,\n});\n\nexport const theme = responsiveFontSizes(baseTheme);\n\ntheme.typography.code = {\n  fontFamily: \"source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace\",\n  fontSize: '.8rem',\n  letterSpacing: '0.1rem',\n  [theme.breakpoints.up('md')]: {\n    fontSize: '1.2rem',\n  },\n};\n","import { Container, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { ReactNode } from 'react';\nimport { Blob } from '../../lib/shapelib';\nimport { simpleLinearGradient } from '../../lib/shapelib/utils';\nimport { theme } from '../../theme';\nimport styles from './Hero.module.css';\n\nconst secondaryColor = theme.palette.secondary.light.toString();\nconst primaryColor = theme.palette.primary.light.toString();\nconst fill = simpleLinearGradient([secondaryColor, primaryColor], -30);\n\ntype HeroProps = {\n  title: ReactNode;\n  subTitle: ReactNode;\n  buttons?: ReactNode;\n  lineColor?: string;\n};\n\nconst shapeProps: React.ComponentProps<typeof Blob> = {\n  complexity: 14,\n  stroke: 'none',\n  fill: fill,\n  variability: 40,\n  smoothness: 0.5,\n};\n\nexport const Hero = ({ title, subTitle, buttons = [] }: HeroProps) => {\n  return (\n    <Container className={styles.heroOuterDiv}>\n      {/* <div > */}\n      <Box className={styles.blobContainer}>\n        <Blob {...shapeProps} />\n      </Box>\n      <Box sx={{ margin: { xs: '3rem 0 7rem', md: '10rem 0' } }}>\n        <Typography variant=\"h1\">{title}</Typography>\n        <Typography variant=\"h2\">{subTitle}</Typography>\n        <>{buttons}</>\n      </Box>\n      {/* </div> */}\n    </Container>\n  );\n};\n","import { Box, BoxProps } from '@mui/material';\n\nexport const Section = (props: BoxProps) => (\n  <Box\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    minHeight=\"30rem\"\n    margin=\"auto\"\n    padding={{ xs: '3rem 0rem', md: '3rem 5rem' }}\n    position=\"relative\"\n    {...props}\n  />\n);\n","import { ShapeComponent, ShapeKind, ShapeProps } from '../../lib/shapelib';\nimport styles from './SideBlob.module.css';\n\nexport const SideBlob: React.FC<Partial<ShapeProps>> = (props) => (\n  <ShapeComponent\n    {...props}\n    kind={ShapeKind.CLOSED}\n    complexity={7}\n    variability={30}\n    className={styles.sideblob}\n    stroke=\"none\"\n    fill=\"#bbb3\"\n  />\n);\n","import { Button, Grid, Paper, Typography, useTheme } from '@mui/material';\n\nexport type CodeBlockProps = {\n  code: string;\n  docsURL?: string;\n};\n\nexport const CodeBlock = (props: CodeBlockProps) => {\n  const theme = useTheme();\n  return (\n    <>\n      <Paper\n        sx={{\n          padding: theme.spacing(1),\n          margin: theme.spacing(1, 0),\n          overflow: 'hidden',\n          background: theme.palette.grey[900],\n          color: 'white',\n        }}\n      >\n        <Typography variant=\"code\" sx={{ whiteSpace: 'pre-wrap' }}>\n          {props.code}\n        </Typography>\n      </Paper>\n      <Grid container spacing={1}>\n        <Grid item md={3} xs={12} sm={6}>\n          {props.docsURL ? (\n            <Button size=\"small\" sx={{ width: '100%' }} variant=\"outlined\" href={props.docsURL}>\n              Read Docs\n            </Button>\n          ) : (\n            ''\n          )}\n        </Grid>\n        <Grid item md={3} xs={12} sm={6}>\n          <Button\n            size=\"small\"\n            variant=\"outlined\"\n            onClick={() => navigator.clipboard.writeText(props.code)}\n            sx={{ width: '100%' }}\n          >\n            Copy\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n","import { Container, Grid, Typography } from '@mui/material';\nimport { CodeBlock } from '../Base/CodeBlock';\n\nconst reactCode = `import ShapeComponent from shapelib\nexport const MyComponent = () => (\n    <ShapeComponent type=\"blob\"/>\n    ...\n)\n`;\n\nconst plainJSCode = `<script .../>\n\nshapelib.draw(target, params, ...)\n\n\n`;\n\nexport type HowToBlockProps = {\n  title: string;\n  code: string;\n  url: string;\n};\nconst HowToBlock = (props: HowToBlockProps) => {\n  const { title, code, url } = props;\n  return (\n    <>\n      <Typography variant=\"h3\">{title}</Typography>\n      <CodeBlock code={code} docsURL={url} />\n    </>\n  );\n};\n\nexport const HowTo = () => {\n  return (\n    <Container>\n      <Grid container spacing={4} sx={{ textAlign: 'left' }}>\n        <Grid item xs={12} md={6}>\n          <HowToBlock title=\"React JS\" code={reactCode} url=\"https://github.com/helloswyg/autoshapes-example\" />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <HowToBlock title=\"Plain JS\" code={plainJSCode} url=\"https://github.com/helloswyg/autoshapes-example\" />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import { Grid, Paper, Typography } from '@mui/material';\nimport { ReactNode } from 'react';\n\nexport type GalleryProps = {\n  title: string;\n  items: ReactNode[];\n};\n\nconst GalleryItem: React.FC<{}> = (props) => {\n  return (\n    <Paper\n      sx={{\n        minWidth: '5rem',\n        minHeight: '5rem',\n        height: '100%',\n      }}\n    >\n      {props.children}\n    </Paper>\n  );\n};\n\nexport const Gallery = (props: GalleryProps) => {\n  return (\n    <>\n      <Typography variant=\"h3\">{props.title}</Typography>\n      <Grid container spacing={1} justifyContent=\"center\">\n        {props.items.map((item, index) => (\n          <Grid item xs={6} md={3} key={index}>\n            <GalleryItem>{item}</GalleryItem>\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  );\n};\n","import { Box, Container, Stack, Typography, useTheme } from '@mui/material';\nimport { ReactNode } from 'react';\nimport { Gallery } from '../Base/Gallery/Gallery';\n\ninterface ShapeSpec {\n  name: string;\n  shape: ReactNode;\n}\n\nexport type ShapeGalleryProps = {\n  title: string;\n  shapes: ShapeSpec[];\n};\n\nconst ShapeItem = (props: ShapeSpec) => {\n  const theme = useTheme();\n  return (\n    <Container sx={{ padding: theme.spacing(2), height: '100%' }}>\n      <Stack justifyContent=\"space-between\" alignItems=\"center\" height=\"100%\">\n        <Typography variant=\"overline\">{props.name}</Typography>\n        <div style={{ width: '8rem', margin: 'auto' }}>{props.shape}</div>\n      </Stack>\n    </Container>\n  );\n};\n\nexport const ShapeGallery = (props: ShapeGalleryProps) => {\n  const theme = useTheme();\n  return (\n    <Box sx={{ padding: theme.spacing(2, 0), paddingLeft: 0 }}>\n      <Gallery title={props.title} items={props.shapes.map(ShapeItem)} />\n    </Box>\n  );\n};\n","import { Container, Stack, Typography } from '@mui/material';\nimport { Blob } from '../../lib/shapelib';\nimport { simpleLinearGradient } from '../../lib/shapelib/utils';\nimport { ShapeGallery } from '../ShapeComponents/ShapeGallery';\nimport { theme } from '../../theme';\n\nconst secondaryColor = theme.palette.secondary.light.toString();\nconst primaryColor = theme.palette.primary.light.toString();\nconst fill = simpleLinearGradient([secondaryColor, primaryColor], -30);\n\nconst geometricParams: React.ComponentProps<typeof Blob> = {\n  fill: fill,\n  stroke: 'none',\n};\nconst geometricSet = [\n  {\n    name: '3-Point',\n    shape: <Blob {...geometricParams} complexity={3} />,\n  },\n  {\n    name: '4-Point',\n    shape: <Blob {...geometricParams} complexity={4} />,\n  },\n  {\n    name: '5-Point',\n    shape: <Blob {...geometricParams} complexity={5} />,\n  },\n  {\n    name: '6-Point',\n    shape: <Blob {...geometricParams} complexity={6} />,\n  },\n];\n\nconst smoothingParams: React.ComponentProps<typeof Blob> = {\n  fill: fill,\n  complexity: 3,\n  stroke: 'none',\n};\nconst smoothingSet = [0, 0.1, 0.5, 0.8].map((item) => ({\n  name: `Smoothing=${item}`,\n  shape: <Blob {...smoothingParams} smoothness={item} />,\n}));\n\nconst complexVariableParams: React.ComponentProps<typeof Blob> = {\n  fill: fill,\n  variability: 50,\n  smoothness: 0.5,\n  stroke: 'none',\n};\nconst complexVariableSet = [3, 3, 10, 10].map((item) => ({\n  name: 'Random Variant',\n  shape: <Blob {...complexVariableParams} complexity={item} />,\n}));\n\nconst fillVariationsParams: React.ComponentProps<typeof Blob> = {\n  fill: fill,\n  complexity: 5,\n  smoothness: 0.5,\n};\nconst fillVariationsSet = [\n  {\n    name: 'Outline',\n    shape: <Blob {...fillVariationsParams} fill=\"none\" />,\n  },\n  {\n    name: 'Solid Color',\n    shape: <Blob {...fillVariationsParams} fill={primaryColor} />,\n  },\n  {\n    name: 'Gradient',\n    shape: <Blob {...fillVariationsParams} />,\n  },\n  {\n    name: 'No Stroke',\n    shape: <Blob {...fillVariationsParams} stroke=\"none\" />,\n  },\n];\n\nexport const VariationsGallery = () => {\n  return (\n    <Container>\n      <Typography variant=\"h2\">Shape Families </Typography>\n      <Typography variant=\"subtitle1\">\n        Shape Families give consistent but unique style throughout your project\n      </Typography>\n      <Stack spacing={2}>\n        <ShapeGallery key={1} title=\"Simple Geometric Shapes\" shapes={geometricSet} />\n        <ShapeGallery key={2} title=\"Configure smoothness\" shapes={smoothingSet} />\n        <ShapeGallery key={3} title=\"Variable Shapes\" shapes={complexVariableSet} />\n        <ShapeGallery key={4} title=\"Variable Style\" shapes={fillVariationsSet} />\n      </Stack>\n    </Container>\n  );\n};\n","import { Paper, Typography, Box, useTheme } from '@mui/material';\nimport { ReactNode } from 'react';\n\ntype TextBlockProps = {\n  title: ReactNode;\n};\n\nexport const TextBlock: React.FC<TextBlockProps> = (props) => {\n  const theme = useTheme();\n  return (\n    <Paper sx={{ opacity: 0.95 }}>\n      <Box padding={theme.spacing(10, 4)}>\n        <Typography variant=\"h2\">{props.title}</Typography>\n        <Typography variant=\"body1\">{props.children}</Typography>\n      </Box>\n    </Paper>\n  );\n};\n","import { useTheme } from '@mui/material';\nimport { Blob } from '../../lib/shapelib';\nimport { simpleLinearGradient } from '../../lib/shapelib/utils';\nimport { TextBlock } from '../Base/TextBlock';\nimport styles from './TextBoxExample.module.css';\n\nconst blobProps = {\n  stroke: 'none',\n  variability: 20,\n  complexity: 3,\n};\n\nexport const TextBoxExample = () => {\n  const theme = useTheme();\n  const primary = theme.palette.primary.main.toString();\n  const primaryLight = theme.palette.primary.light.toString();\n  const secondary = theme.palette.secondary.dark.toString();\n  const secondaryLight = theme.palette.secondary.light.toString();\n  const secondaryGradient = simpleLinearGradient([secondaryLight, secondary]);\n  const primaryGradient = simpleLinearGradient([primaryLight, primary], 90);\n\n  return (\n    <div style={{ position: 'relative', margin: theme.spacing(20, 2) }}>\n      <Blob className={styles.blob1} fill={primaryGradient} rotate={-20} {...blobProps} />\n      <Blob className={styles.blob2} fill={secondaryGradient} {...blobProps} complexity={5} />\n      <Blob className={styles.blob3} fill={secondaryGradient} rotate={-20} {...blobProps} />\n      <TextBlock title=\"Add color and depth\">\n        By placing shapes either in fron or behind your content you can add depth without distracting from your content\n      </TextBlock>\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './App.module.css';\nimport { Header } from '../Header';\nimport { Footer } from '../Footer';\nimport { Hero } from '../Hero';\nimport { Section } from '../Base/Section';\nimport { SideBlob } from '../ShapeComponents/SideBlob';\nimport { HowTo } from '../HowTo';\nimport { VariationsGallery } from '../VariationsGallery';\nimport { TextBoxExample } from '../TextBoxExample';\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <Header />\n      <Section>\n        <Hero\n          title={<>ShapeLib</>}\n          subTitle={\n            <>\n              Beautiful, procedurally generated <br />\n              shapes for the web\n            </>\n          }\n        />\n      </Section>\n      <Section>\n        <HowTo />\n      </Section>\n      <Section>\n        <SideBlob />\n        <VariationsGallery />\n      </Section>\n      {/* <Section >\n        <AccentBlobsExample />\n      </Section> */}\n      <Section>\n        <TextBoxExample />\n      </Section>\n      <Footer />\n    </div>\n    // </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport { ThemeProvider } from '@mui/material/styles';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from './theme';\nimport { CssBaseline } from '@mui/material';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}