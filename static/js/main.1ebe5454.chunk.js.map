{"version":3,"sources":["components/ShapeComponents/BackgroundBlob.module.css","components/App/App.module.css","components/Hero/Hero.module.css","components/ShapeComponents/SideBlob.module.css","components/Header/Header.tsx","components/Footer/Footer.tsx","lib/shapelib/core.ts","lib/shapelib/ShapeComponent.tsx","lib/shapelib/utils.ts","lib/shapelib/library.ts","components/Hero/Hero.tsx","components/Section/Section.tsx","components/ShapeComponents/BackgroundBlob.tsx","components/AccentBlobsExample/AccentBlobsExample.tsx","components/TextBlock/TextBlock.tsx","components/ShapeComponents/SideBlob.tsx","components/App/App.tsx","reportWebVitals.ts","theme.ts","index.tsx"],"names":["module","exports","Header","className","Footer","ShapeKind","isGradientSpec","spec","includes","type","defaultShapeProps","kind","CLOSED","complexity","smoothness","variability","seed","path","defaultDrawShapeProps","fill","color","opacity","stroke","width","transform","drawShape","params","allParams","pathArray","LOOPY","WAVY","library","loopyLine","numElements","baseRadius","closedPath","numPoints","PathArray","getShape","draw","SVG","addTo","element","size","filledPath","gradientParams","block","gradient","rotate","orientation","bbox","bboxExpanded","x","y","margin","height","viewbox","e","ShapeComponent","props","refToDiv","useRef","useEffect","current","ref","textContent","style","zIndex","flip","how","flattenedArray","flat","numberCounter","index","length","flipY","scale","factor","value","small","big","pathCompose","segments","output","forEach","segment","flattenedOutput","flattenedSegment","concat","simpleLinearGradient","stops","gradientSpec","add","i","stop","loopSegment","reverseLoopSegment","curveSegment90","reverseCurveSegment90","curveSegment45","reverseCurveSegment45","connectorSegment","reverseConnectorSegment","horizontalrSegment","basicBlocks","loop","crest","connector","twistConnector","drop","flipX","compositeShapes","nPointRadial","radialDistances","offset","numSegments","r","deltaR","controlpointLength","Math","abs","PI","sin","cos","dX","dY","controlPointX","controlPointY","rng","seedrandom","oddNumberedBaseRadius","radii","Array","currentBaseRadius","blob2","blob3","blob4","blob5","closedShapes","shapeProps","Hero","title","subTitle","buttons","lineColor","styles","heroOuterDiv","position","maxWidth","marginTop","Typography","variant","Section","Box","display","justifyContent","alignItems","minHeight","padding","BackgroundBlob","passThroughProps","pathProps","container","shape","contents","children","Item","baseColor","AccentBlobsExample","Grid","spacing","item","xs","TextBlock","SideBlob","sideblob","App","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","typography","h1","fontSize","h2","body1","palette","primary","main","secondary","light","contrastText","contrastThreshold","tonalOffset","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.1ebe5454.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"shape\":\"BackgroundBlob_shape__YU32X\",\"container\":\"BackgroundBlob_container__2Fb3J\",\"contents\":\"BackgroundBlob_contents__1cbBH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heroOuterDiv\":\"Hero_heroOuterDiv__OEvcs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideblob\":\"SideBlob_sideblob__31TX9\"};","export function Header() {\n  return <div className=\"header\"></div>;\n}\n","export function Footer() {\n  return <div className=\"footer\"></div>;\n}\n\nexport default Footer;\n","import { Container, FillData, Gradient, MatrixAlias, PathArray, StrokeData, SVG, Svg } from '@svgdotjs/svg.js';\nimport { library } from '.';\n\n// Type definitions /////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport enum ShapeKind {\n  WAVY,\n  LOOPY,\n  CLOSED,\n}\n\nexport interface PathProps {\n  kind: ShapeKind;\n  complexity?: number;\n  smoothness?: number;\n  variability?: number;\n  seed?: number;\n  path?: PathArray | null;\n}\n\nexport interface GradientSpec {\n  type: string;\n  block: (stop: Gradient) => void;\n  orientation?: number;\n}\n\nfunction isGradientSpec(spec: any): spec is GradientSpec {\n  if (!('type' in spec)) return false;\n  if (!('block' in spec)) return false;\n  return ['linear', 'radial'].includes((spec as GradientSpec).type);\n}\n\nexport type StyleProps = {\n  fill?: FillData | string | GradientSpec;\n  stroke?: StrokeData | string | GradientSpec;\n  transform?: MatrixAlias;\n};\n\nexport type Element = {\n  element: HTMLElement | string;\n};\n\nexport type ShapeProps = PathProps & StyleProps;\nexport type DrawShapeParams = Element & PathProps & StyleProps;\n\n// Default Values /////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const defaultShapeProps: Required<PathProps> = {\n  kind: ShapeKind.CLOSED,\n  complexity: 4,\n  smoothness: 1,\n  variability: 1,\n  seed: 1,\n  path: null,\n};\n\nexport const defaultStyleProps: Required<StyleProps> = {\n  fill: { color: '#000', opacity: 0.0 },\n  stroke: { color: 'black', width: 3, opacity: 0.8 },\n  transform: {},\n};\n\nexport const defaultDrawShapeProps = { ...defaultShapeProps, ...defaultStyleProps };\n\n// Function implementations /////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport function getShape(params: PathProps) {\n  const allParams: Required<PathProps> = { ...defaultShapeProps, ...params };\n  if (allParams.path !== null) return allParams.path;\n\n  switch (allParams.kind) {\n    case ShapeKind.LOOPY:\n      // TODO: make loopy line procedural\n      return library.loopyLine({\n        numElements: allParams.complexity,\n        variability: allParams.variability,\n        smoothness: allParams.smoothness,\n        baseRadius: 100,\n      });\n    case ShapeKind.WAVY:\n      // TODO: implemeny wavy line\n      return library.loopyLine({\n        numElements: allParams.complexity,\n        variability: allParams.variability,\n        smoothness: allParams.smoothness,\n        baseRadius: 100,\n      });\n    case ShapeKind.CLOSED:\n      return library.closedPath({\n        numPoints: allParams.complexity,\n        variability: allParams.variability,\n        smoothness: allParams.smoothness,\n        baseRadius: 100,\n      });\n    default:\n      break;\n  }\n  return new PathArray();\n}\n\nexport function drawShape(params: DrawShapeParams) {\n  const allParams: Required<DrawShapeParams> = { ...defaultDrawShapeProps, ...params };\n  const pathArray = getShape(allParams as PathProps);\n  const draw: Svg = SVG().addTo(allParams.element).size('100%', '100%');\n  let path = draw.path(pathArray);\n  let filledPath = path;\n\n  // some verbose language to be allowed to use overloaded \"fill\" function with union types\n  if (typeof allParams.fill === 'string') {\n    filledPath = path.fill(allParams.fill as string);\n  } else if (isGradientSpec(allParams.fill)) {\n    const gradientParams: Parameters<Container['gradient']> = [allParams.fill.type, allParams.fill.block];\n    const gradient = draw.gradient(...gradientParams).rotate(allParams.fill.orientation || 0);\n    filledPath = path.fill(gradient);\n  } else {\n    filledPath = path.fill(allParams.fill);\n  }\n\n  if (typeof allParams.stroke === 'string') {\n    path = filledPath.stroke(allParams.stroke as string);\n  } else if (isGradientSpec(allParams.stroke)) {\n    const gradientParams: Parameters<Container['gradient']> = [allParams.stroke.type, allParams.stroke.block];\n    const gradient = draw.gradient(...gradientParams).rotate(allParams.stroke.orientation || 0);\n    filledPath = path.fill(gradient);\n  } else {\n    path = filledPath.stroke(allParams.stroke as StrokeData);\n  }\n\n  // set viewport for svg to bounding box + margin\n  try {\n    const bbox = path.bbox();\n    const margin = 4;\n    const bboxExpanded = {\n      x: bbox.x - margin,\n      y: bbox.y - margin,\n      width: bbox.width + margin * 2,\n      height: bbox.height + margin * 2,\n    };\n    draw.viewbox({ ...bboxExpanded });\n  } catch (e) {\n    //TODO: do something to get an alternative bounding box\n    // this is currently only a problem in jest. Real browsers do fine.\n  }\n\n  return path;\n}\n","import React, { useEffect, useRef } from 'react';\nimport { drawShape, ShapeProps } from './core';\n\nexport const ShapeComponent: React.FC<ShapeProps & React.HTMLAttributes<HTMLElement>> = (props) => {\n  const refToDiv = useRef(null);\n\n  useEffect(() => {\n    if (refToDiv.current) {\n      const ref = refToDiv.current as HTMLElement;\n      ref.textContent = '';\n      drawShape({ element: ref, ...props });\n    }\n  });\n\n  return <div ref={refToDiv} style={{ width: '100%', height: '100%', zIndex: -1 }} {...props} />;\n};\n","import { Path, PathArray, PointArray, Svg, SVG } from '@svgdotjs/svg.js';\nimport { GradientSpec } from '.';\n\nexport function smooth(pathArray: PathArray): PathArray {\n  let flattenedArray = pathArray.flat();\n  if (flattenedArray[0] === 'S') {\n    return pathArray;\n  }\n  if (flattenedArray[0] === 'M') {\n    flattenedArray = flattenedArray.slice(3);\n  }\n  if (flattenedArray[0] === 'C') {\n    flattenedArray = flattenedArray.slice(2);\n    flattenedArray[0] = 'S';\n  } else {\n    throw new Error('Only cubic bezier curves are supported');\n  }\n  return new PathArray(flattenedArray);\n}\n\nexport function flip(pathArray: PathArray, how: 'x' | 'y'): PathArray {\n  let flattenedArray = pathArray.flat();\n  let numberCounter = 0;\n\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const element = flattenedArray[index];\n    if (typeof element === 'number') {\n      if (how === 'y') {\n        // if element is at an even-numbered position it's an x coordidante otherwise a y coordinate\n        flattenedArray[index] = numberCounter % 2 === 0 ? element : -element;\n      }\n      if (how === 'x') {\n        // if element is at an even-numbered position it's an x coordidante otherwise a y coordinate\n        flattenedArray[index] = numberCounter % 2 === 1 ? element : -element;\n      }\n      numberCounter += 1;\n    }\n  }\n  return new PathArray(flattenedArray);\n}\n\nexport function flipY(pathArray: PathArray): PathArray {\n  return flip(pathArray, 'y');\n}\n\nexport function flipX(pathArray: PathArray): PathArray {\n  return flip(pathArray, 'x');\n}\n\nexport function flipXY(pathArray: PathArray): PathArray {\n  return flip(flip(pathArray, 'x'), 'y');\n}\n\nexport function scale(pathArray: PathArray, factor: number): PathArray {\n  // scale path relative to 0,0 means we simply multiply all numbers by factor\n  let flattenedArray = pathArray.flat();\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const value = flattenedArray[index];\n    if (typeof value === 'number') {\n      flattenedArray[index] = value * factor;\n    }\n  }\n  return new PathArray(flattenedArray);\n}\n\nexport function small(pathArray: PathArray): PathArray {\n  return scale(pathArray, 0.5);\n}\n\nexport function big(pathArray: PathArray): PathArray {\n  return scale(pathArray, 2.0);\n}\n\nexport function toPointArray(pathArray: PathArray): PointArray {\n  let flattenedArray = pathArray.flat();\n  let output: number[] = [];\n\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const element = flattenedArray[index];\n    if (typeof element === 'number') {\n      output = output.concat(element);\n    }\n  }\n  return new PointArray(output);\n}\n\nexport function pathCompose(segments: PathArray[]): PathArray {\n  // we assume that the last two numbers in a path segment are the end point of the path so far.\n  // That end point will be the starting point of the next segment.\n  // each segment is encoded as if starting at 0,0 so the segment has to be translated to new coordinates before appending.\n\n  let output = new PathArray();\n  if (segments[0].flat()[0] !== 'M') {\n    output = output = new PathArray('M 0 0');\n  }\n\n  segments.forEach((segment) => {\n    const flattenedOutput = output.flat();\n    let flattenedSegment = segment.flat();\n    const x = flattenedOutput[flattenedOutput.length - 2];\n    const y = flattenedOutput[flattenedOutput.length - 1];\n    let numberCounter = 0;\n\n    if (typeof x !== 'number' || typeof y !== 'number') return output;\n    for (let index = 0; index < flattenedSegment.length; index++) {\n      const element = flattenedSegment[index];\n      if (typeof element === 'number') {\n        // if element is at an even-numbered position it's an x coordidante otherwise a y coordinate\n        flattenedSegment[index] = element + (numberCounter % 2 === 0 ? x : y);\n        numberCounter += 1;\n      }\n    }\n    output = output.concat(new PathArray(flattenedSegment)) as PathArray;\n  });\n\n  return output;\n}\n\nexport function quickDrawPath(elementID: string, pathArray: PathArray): Path {\n  const draw: Svg = SVG().addTo(elementID).size('100%', '100%');\n  const path = draw.path(pathArray).fill('none').stroke({ color: '#000', width: 3 });\n  return path;\n}\n\nexport function simpleLinearGradient(stops: string[], orientation = 90) {\n  const gradientSpec: GradientSpec = {\n    type: 'linear',\n    block: (add) => {\n      for (let i = 0; i < stops.length; i++) {\n        add.stop(i / (stops.length - 1), stops[i]);\n      }\n    },\n    orientation,\n  };\n  return gradientSpec;\n}\n","import { PathArray } from '@svgdotjs/svg.js';\nimport seedrandom from 'seedrandom';\nimport { pathCompose, flipY, flipX, flipXY, small, big } from './utils';\nexport type pathLibrary = { [key: string]: PathArray };\n\n////////////////////////////////////////////////////////////////////////////////////\n// basic blocks\n////////////////////////////////////////////////////////////////////////////////////\nconst loopSegment = new PathArray('C 25 50 25 100 0 100');\nconst reverseLoopSegment = new PathArray('C 25 0 25 50 0 100');\nconst curveSegment90 = new PathArray('C 50 0 100 50 100 100');\nconst reverseCurveSegment90 = new PathArray('C 0 50 50 100 100 100');\nconst curveSegment45 = new PathArray('C 50 25 75 50 100 100');\nconst reverseCurveSegment45 = new PathArray('C 25 50 50 75 100 100');\nconst connectorSegment = new PathArray('C 50 25 90 25 100 25');\nconst reverseConnectorSegment = new PathArray('C 10 0 50 0 100 25');\nconst horizontalrSegment = new PathArray('C 25 0 25 0 25 0');\n\nexport const basicBlocks: pathLibrary = {\n  loopSegment,\n  reverseLoopSegment,\n  curveSegment45,\n  reverseCurveSegment45,\n  curveSegment90,\n  reverseCurveSegment90,\n  connectorSegment,\n  reverseConnectorSegment,\n  horizontalrSegment,\n};\n\n////////////////////////////////////////////////////////////////////////////////////\n// composite shapes\n////////////////////////////////////////////////////////////////////////////////////\nexport const loop = pathCompose([\n  curveSegment45,\n  loopSegment,\n  flipXY(reverseLoopSegment),\n  flipY(reverseCurveSegment45),\n]);\nexport const crest = pathCompose([curveSegment45, flipY(reverseCurveSegment45)]);\nexport const connector = pathCompose([connectorSegment, flipY(reverseConnectorSegment)]);\nexport const twistConnector = pathCompose([connectorSegment, reverseConnectorSegment]);\nexport const drop = pathCompose([\n  curveSegment90,\n  flipX(loopSegment),\n  small(small(horizontalrSegment)),\n  flipY(reverseLoopSegment),\n  flipY(reverseCurveSegment90),\n]);\n\nexport const compositeShapes: pathLibrary = {\n  loop,\n  crest,\n  connector,\n  twistConnector,\n  drop,\n};\n\nexport interface LoopyLineParams {\n  numElements: number;\n  variability: number;\n  smoothness: number;\n  baseRadius: number;\n}\n\nexport function loopyLine(params: LoopyLineParams): PathArray {\n  // TODO: make loopy line procedural\n  return pathCompose([\n    new PathArray(['M 0 0']),\n    small(flipY(crest)),\n    twistConnector,\n    small(loop),\n    big(flipY(loop)),\n    connector,\n  ]);\n}\n\n////////////////////////////////////////////////////////////////////////////////////\n// closed shapes\n////////////////////////////////////////////////////////////////////////////////////\n\nexport function nPointRadial(radialDistances: number[], smoothness: number=0.5): PathArray {\n  const offset = { x: 100, y: 100 };\n  let output = new PathArray(['M', offset.x, offset.y + radialDistances[0]]);\n  const numSegments = radialDistances.length;\n\n  for (let i = 1; i < radialDistances.length + 1; i++) {\n    const r = radialDistances[i % numSegments];\n    const deltaR = radialDistances[i % numSegments] - radialDistances[(i-1) % numSegments]\n    const controlpointLength = (Math.abs(deltaR) / r + .5)  * smoothness * r / numSegments * 2 * Math.PI\n    const x = r * Math.sin((i * 2 * Math.PI) / numSegments) + offset.x;\n    const y = r * Math.cos((i * 2 * Math.PI) / numSegments) + offset.y;\n    const dX = -Math.cos(i * 2 * Math.PI / numSegments) * controlpointLength;\n    const dY = Math.sin(i * 2 * Math.PI/ numSegments) * controlpointLength;\n    const controlPointX = x + dX;\n    const controlPointY = y + dY;\n\n    if (i === 1) {\n      output = output.concat([\n        'C',\n        controlpointLength + offset.x,\n        radialDistances[0] + offset.y,\n        controlPointX,\n        controlPointY,\n        x,\n        y,\n      ]) as PathArray;\n    } else {\n      output = output.concat(['S', controlPointX, controlPointY, x, y]) as PathArray;\n    }\n  }\n\n  output = output.concat(['z']) as PathArray;\n\n  return output;\n}\n\nexport interface ClosedPathParams {\n  numPoints: number;\n  variability: number;\n  smoothness: number;\n  baseRadius: number;\n}\n\nexport function closedPath(params: ClosedPathParams): PathArray {\n  const rng = seedrandom('seed string');\n  const oddNumberedBaseRadius = params.baseRadius - params.variability\n  const radii = new Array(params.numPoints);\n  for (let i = 0; i < params.numPoints; i++) {\n    const currentBaseRadius = i%2 === 0 ? params.baseRadius : oddNumberedBaseRadius\n    radii[i] = currentBaseRadius + (rng() - 0.5) * params.variability;\n  }\n  return nPointRadial(radii, params.smoothness);\n}\n\nexport const blob2 = nPointRadial([75, 75]);\nexport const blob3 = nPointRadial([75, 75, 20]);\nexport const blob4 = nPointRadial([75, 75, 20, 90]);\nexport const blob5 = nPointRadial([75, 75, 20, 100, 25]);\n\nexport const closedShapes: pathLibrary = {\n  blob2,\n  blob3,\n  blob4,\n  blob5,\n};\n","import { Typography } from '@mui/material';\nimport { ReactNode } from 'react';\nimport { ShapeComponent, ShapeKind } from '../../lib/shapelib';\nimport styles from './Hero.module.css';\n\ntype HeroProps = {\n  title: ReactNode;\n  subTitle: ReactNode;\n  buttons?: ReactNode;\n  lineColor?: string;\n};\n\nconst shapeProps = {\n  kind: ShapeKind.LOOPY,\n  complexity: 4,\n  stroke: { color: '#ff1b5f', width: 3 },\n};\n\nexport const Hero = ({ title, subTitle, buttons = [], lineColor = shapeProps.stroke.color }: HeroProps) => {\n  shapeProps.stroke.color = lineColor;\n  return (\n    <div className={styles.heroOuterDiv}>\n      <ShapeComponent\n        {...shapeProps}\n        style={{ position: 'absolute', maxWidth: '70%', marginTop: '-3em', zIndex: -1 }}\n      />\n      <div style={{ margin: '5em' }}>\n        <Typography variant=\"h1\">{title}</Typography>\n        <Typography variant=\"h2\">{subTitle}</Typography>\n        <>{buttons}</>\n      </div>\n    </div>\n  );\n};\n","import { Box, BoxProps } from '@mui/material';\n\nexport const Section = (props: BoxProps) => (\n  <Box\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    minHeight=\"60vh\"\n    maxWidth=\"1440px\"\n    margin=\"auto\"\n    padding=\"5rem 0 5rem 0\"\n    position='relative'\n    {...props}\n  />\n);\n","import { PathProps, ShapeComponent, ShapeKind, StyleProps } from '../../lib/shapelib';\nimport styles from './BackgroundBlob.module.css';\n\ntype BackgroundBlobProps = StyleProps & {\n  numPoints: number;\n};\n\nexport const BackgroundBlob: React.FC<BackgroundBlobProps> = (props) => {\n  const { numPoints, ...passThroughProps } = props;\n  const pathProps: PathProps= {\n    kind: ShapeKind.CLOSED,\n    complexity: numPoints,\n    variability: 50,\n    smoothness: .8\n  };\n\n  return (\n    <div className={styles.container}>\n      <ShapeComponent {...pathProps} {...passThroughProps} className={styles.shape} />\n      <div className={styles.contents}>{props.children}</div>\n    </div>\n  );\n};\n","import { Grid, Typography } from '@mui/material';\nimport { simpleLinearGradient } from '../../lib/shapelib/utils';\nimport { BackgroundBlob } from '../ShapeComponents/BackgroundBlob';\n\nconst Item: React.FC<{}> = (props) => <div style={{ padding: '3rem' }}>{props.children}</div>;\nconst baseColor = '#ff1b5f';\n\nexport const AccentBlobsExample = () => {\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n      <div><Typography variant='h2'>Background shapes</Typography></div>\n\n      </Grid>\n      <Grid item xs={4}>\n        <BackgroundBlob numPoints={5} stroke={{ color: baseColor, width: 3, opacity: 0.6 }} fill=\"none\">\n          <Item>\n            <Typography variant=\"h4\">Outline only</Typography>\n            <Typography variant=\"body1\">Use small shapes in the background of text or other elements.</Typography>\n          </Item>\n        </BackgroundBlob>\n      </Grid>\n      <Grid item xs={4}>\n        <BackgroundBlob numPoints={7} stroke={'none'} fill={baseColor}>\n          <Item>\n            <Typography variant=\"h4\">Filled</Typography>\n            <Typography variant=\"body1\">\n              Shapes can be filled, have opacity and re-size with the foreground content.\n            </Typography>\n          </Item>\n        </BackgroundBlob>\n      </Grid>\n      <Grid item xs={4}>\n        <BackgroundBlob\n          numPoints={10}\n          stroke={'none'}\n          fill={simpleLinearGradient([baseColor.concat('65'), baseColor], 90)}\n        >\n          <Item>\n            <Typography variant=\"h4\">Gradient</Typography>\n            <Typography variant=\"body1\">\n              Shapes can be filled, have opacity and re-size with the foreground content.\n            </Typography>\n          </Item>\n        </BackgroundBlob>\n      </Grid>\n    </Grid>\n  );\n};\n","import {  Typography } from '@mui/material';\nimport { ReactNode } from 'react';\n\ntype TextBlockProps = {\n  title: ReactNode,\n}\n\nexport const TextBlock:React.FC<TextBlockProps> = (props) => {\n  return (\n    <div style={{display:'block'}}>\n    <Typography variant='h2'>{props.title}</Typography>\n    <Typography variant='body1'>{props.children}</Typography>\n    </div>\n  );\n};\n","import { ShapeComponent, ShapeKind, ShapeProps } from \"../../lib/shapelib\";\nimport styles from './SideBlob.module.css'\n\nexport const SideBlob: React.FC<Partial<ShapeProps>> = props => (\n    <ShapeComponent \n    {...props} \n    kind={ShapeKind.CLOSED}\n    complexity={7}\n    variability={50} \n    className={styles.sideblob} \n    stroke=\"none\"\n    fill=\"#bbb3\"\n    />\n)","import React from 'react';\nimport styles from './App.module.css';\nimport { Header } from '../Header';\nimport { Footer } from '../Footer';\nimport { Hero } from '../Hero';\nimport { Section } from '../Section';\nimport { AccentBlobsExample } from '../AccentBlobsExample';\nimport { TextBlock } from '../TextBlock';\nimport { SideBlob } from '../ShapeComponents/SideBlob';\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <Header />\n      <Section>\n        <Hero\n          title={<>Instant Unique Brand</>}\n          subTitle={\n            <>\n              Beautiful procedurally generated shapes <br /> for your websites\n            </>\n          }\n        />\n      </Section>\n      <Section >\n        <AccentBlobsExample />\n      </Section>\n      <Section >\n        <SideBlob/>\n        <TextBlock title=\"Text Block\">\n          This is a text block body text.\n        </TextBlock>\n      </Section>\n      <Footer />\n    </div>\n    // </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n  typography: {\n    h1: {\n      fontSize: '5rem',\n    },\n    h2: {\n      fontSize: '3rem',\n    },\n    body1:{\n      fontSize: '1.2rem'\n    }\n  },\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#ff4400',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      light: '#0066ff',\n      main: '#0044ff',\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: '#ffcc00',\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport { ThemeProvider } from '@mui/material/styles';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}