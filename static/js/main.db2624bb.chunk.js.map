{"version":3,"sources":["components/TextBoxExample/TextBoxExample.module.css","components/Hero/Hero.module.css","components/App/App.module.css","components/ShapeComponents/SideBlob.module.css","components/Header/Header.tsx","components/Footer/Footer.tsx","lib/shapelib/core.ts","lib/shapelib/Components/ShapeComponent.tsx","lib/shapelib/Components/Blob.tsx","lib/shapelib/utils.ts","lib/shapelib/library.ts","theme.ts","components/Hero/Hero.tsx","components/Base/Section/Section.tsx","components/ShapeComponents/SideBlob.tsx","components/Base/CodeBlock/CodeBlock.tsx","components/HowTo/HowTo.tsx","components/Base/Gallery/Gallery.tsx","components/ShapeComponents/ShapeGallery.tsx","components/VariationsGallery/VariationsGallery.tsx","components/Base/TextBlock/TextBlock.tsx","components/TextBoxExample/TextBoxExample.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Header","className","Footer","ShapeKind","isGradientSpec","spec","includes","type","defaultShapeProps","kind","CLOSED","complexity","smoothness","variability","seed","path","defaultDrawShapeProps","fill","color","opacity","stroke","width","transform","drawShape","params","allParams","pathArray","LOOPY","WAVY","library","loopyLine","numElements","baseRadius","closedPath","numPoints","PathArray","getShape","draw","SVG","addTo","element","size","filledPath","gradientParams","block","gradient","rotate","orientation","bbox","bboxExpanded","x","y","margin","height","viewbox","e","ShapeComponent","props","refToDiv","useRef","useEffect","current","ref","textContent","style","zIndex","Blob","flip","how","flattenedArray","flat","numberCounter","index","length","flipY","scale","factor","value","small","big","pathCompose","segments","modifier","p","output","forEach","segment","flattenedOutput","flattenedSegment","slice","concat","simpleLinearGradient","stops","gradientSpec","add","i","stop","loopSegment","reverseLoopSegment","curveSegment90","reverseCurveSegment90","curveSegment45","reverseCurveSegment45","connectorSegment","reverseConnectorSegment","horizontalrSegment","basicBlocks","loop","crest","l","connector","twistConnector","drop","flipX","compositeShapes","nPointRadial","radialDistances","offset","numSegments","r","deltaR","controlpointLength","Math","abs","PI","sin","cos","dX","dY","controlPointX","controlPointY","rng","seedrandom","oddNumberedBaseRadius","radii","Array","currentBaseRadius","blob2","blob3","blob4","blob5","closedShapes","theme","responsiveFontSizes","createTheme","typography","h1","fontSize","h2","h3","body1","code","fontFamily","letterSpacing","overline","lineHeight","palette","background","default","paper","primary","main","secondary","contrastThreshold","tonalOffset","components","MuiButton","defaultProps","variant","shapeProps","light","toString","Hero","title","subTitle","buttons","styles","heroOuterDiv","Box","blobContainer","Typography","Section","display","justifyContent","alignItems","minHeight","padding","position","SideBlob","sideblob","CodeBlock","useTheme","Paper","sx","spacing","overflow","whiteSpace","Grid","container","item","md","xs","sm","docsURL","Button","href","onClick","navigator","clipboard","writeText","HowToBlock","url","HowTo","Container","textAlign","GalleryItem","minWidth","children","Gallery","items","map","ShapeItem","Stack","name","shape","ShapeGallery","shapes","secondaryColor","primaryColor","geometricParams","geometricSet","smoothingParams","smoothingSet","complexVariableParams","complexVariableSet","fillVariationsParams","fillVariationsSet","VariationsGallery","TextBlock","blobProps","TextBoxExample","secondaryLight","blob1","App","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.db2624bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blob1\":\"TextBoxExample_blob1__3wwYA\",\"blob2\":\"TextBoxExample_blob2__S3WIj\",\"blob3\":\"TextBoxExample_blob3__1NU__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heroOuterDiv\":\"Hero_heroOuterDiv__OEvcs\",\"blobContainer\":\"Hero_blobContainer__2lpVL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideblob\":\"SideBlob_sideblob__31TX9\"};","export function Header() {\n  return <div className=\"header\"></div>;\n}\n","export function Footer() {\n  return <div className=\"footer\"></div>;\n}\n\nexport default Footer;\n","import { Container, FillData, Gradient, MatrixAlias, PathArray, StrokeData, SVG, Svg } from '@svgdotjs/svg.js';\nimport { library } from '.';\n\n// Type definitions /////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport enum ShapeKind {\n  WAVY,\n  LOOPY,\n  CLOSED,\n}\n\nexport interface PathProps {\n  kind: ShapeKind;\n  complexity?: number;\n  smoothness?: number;\n  variability?: number;\n  seed?: number;\n  path?: PathArray | null;\n}\n\nexport interface GradientSpec {\n  type: string;\n  block: (stop: Gradient) => void;\n  orientation?: number;\n}\n\nfunction isGradientSpec(spec: any): spec is GradientSpec {\n  if (!('type' in spec)) return false;\n  if (!('block' in spec)) return false;\n  return ['linear', 'radial'].includes((spec as GradientSpec).type);\n}\n\nexport type StyleProps = {\n  fill?: FillData | string | GradientSpec;\n  stroke?: StrokeData | string | GradientSpec;\n  transform?: MatrixAlias;\n};\n\nexport type Element = {\n  element: HTMLElement | string;\n};\n\nexport type ShapeProps = PathProps & StyleProps;\nexport type DrawShapeParams = Element & PathProps & StyleProps;\n\n// Default Values /////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport const defaultShapeProps: Required<PathProps> = {\n  kind: ShapeKind.CLOSED,\n  complexity: 4,\n  smoothness: 1,\n  variability: 1,\n  seed: 1,\n  path: null,\n};\n\nexport const defaultStyleProps: Required<StyleProps> = {\n  fill: { color: '#000', opacity: 0.0 },\n  stroke: { color: 'black', width: 3, opacity: 0.8 },\n  transform: {},\n};\n\nexport const defaultDrawShapeProps = { ...defaultShapeProps, ...defaultStyleProps };\n\n// Function implementations /////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport function getShape(params: PathProps) {\n  const allParams: Required<PathProps> = { ...defaultShapeProps, ...params };\n  if (allParams.path !== null) return allParams.path;\n\n  switch (allParams.kind) {\n    case ShapeKind.LOOPY:\n      // TODO: make loopy line procedural\n      return library.loopyLine({\n        numElements: allParams.complexity,\n        variability: allParams.variability,\n        smoothness: allParams.smoothness,\n        baseRadius: 100,\n      });\n    case ShapeKind.WAVY:\n      // TODO: implemeny wavy line\n      return library.loopyLine({\n        numElements: allParams.complexity,\n        variability: allParams.variability,\n        smoothness: allParams.smoothness,\n        baseRadius: 100,\n      });\n    case ShapeKind.CLOSED:\n      return library.closedPath({\n        numPoints: allParams.complexity,\n        variability: allParams.variability,\n        smoothness: allParams.smoothness,\n        baseRadius: 100,\n      });\n    default:\n      break;\n  }\n  return new PathArray();\n}\n\nexport function drawShape(params: DrawShapeParams) {\n  const allParams: Required<DrawShapeParams> = { ...defaultDrawShapeProps, ...params };\n  const pathArray = getShape(allParams as PathProps);\n  const draw: Svg = SVG().addTo(allParams.element).size('100%', '100%');\n  let path = draw.path(pathArray);\n  let filledPath = path;\n\n  // some verbose language to be allowed to use overloaded \"fill\" function with union types\n  if (typeof allParams.fill === 'string') {\n    filledPath = path.fill(allParams.fill as string);\n  } else if (isGradientSpec(allParams.fill)) {\n    const gradientParams: Parameters<Container['gradient']> = [allParams.fill.type, allParams.fill.block];\n    const gradient = draw.gradient(...gradientParams).rotate(allParams.fill.orientation || 0);\n    filledPath = path.fill(gradient);\n  } else {\n    filledPath = path.fill(allParams.fill);\n  }\n\n  if (typeof allParams.stroke === 'string') {\n    path = filledPath.stroke(allParams.stroke as string);\n  } else if (isGradientSpec(allParams.stroke)) {\n    const gradientParams: Parameters<Container['gradient']> = [allParams.stroke.type, allParams.stroke.block];\n    const gradient = draw.gradient(...gradientParams).rotate(allParams.stroke.orientation || 0);\n    filledPath = path.fill(gradient);\n  } else {\n    path = filledPath.stroke(allParams.stroke as StrokeData);\n  }\n\n  // set viewport for svg to bounding box + margin\n  try {\n    path = path.transform(allParams.transform);\n    // TODO: rotation here breaks bounding box below\n\n    const bbox = path.bbox();\n    const margin = 4;\n    const bboxExpanded = {\n      x: bbox.x - margin,\n      y: bbox.y - margin,\n      width: bbox.width + margin * 2,\n      height: bbox.height + margin * 2,\n    };\n    draw.viewbox({ ...bboxExpanded });\n  } catch (e) {\n    //TODO: do something to get an alternative bounding box\n    // this is currently only a problem in jest. Real browsers do fine.\n  }\n\n  return path;\n}\n","import React, { useEffect, useRef } from 'react';\nimport { drawShape, ShapeProps } from '../core';\n\nexport type ShapeComponentProps = ShapeProps & React.HTMLAttributes<HTMLElement>;\n\nexport const ShapeComponent: React.FC<ShapeComponentProps> = (props) => {\n  const refToDiv = useRef(null);\n\n  useEffect(() => {\n    if (refToDiv.current) {\n      const ref = refToDiv.current as HTMLElement;\n      ref.textContent = '';\n      drawShape({ element: ref, ...props });\n    }\n  });\n\n  return <div ref={refToDiv} style={{ width: '100%', height: '100%', zIndex: -1 }} {...props} />;\n};\n","import { ShapeKind } from '..';\nimport { ShapeComponent, ShapeComponentProps } from './ShapeComponent';\n\nexport type BlobProps = Omit<ShapeComponentProps, 'kind'>;\n\nexport const Blob: React.FC<BlobProps> = (props) => <ShapeComponent kind={ShapeKind.CLOSED} {...props} />;\n","import { Path, PathArray, PointArray, Svg, SVG } from '@svgdotjs/svg.js';\nimport seedrandom from 'seedrandom';\nimport { GradientSpec } from '.';\n\nexport function smooth(pathArray: PathArray): PathArray {\n  let flattenedArray = pathArray.flat();\n  console.log(flattenedArray);\n  if (flattenedArray.length === 0) return new PathArray();\n  if (flattenedArray[0] === 'S') {\n    return pathArray;\n  }\n  if (flattenedArray[0] === 'M') {\n    flattenedArray = flattenedArray.slice(3);\n  }\n  if (flattenedArray[0] === 'C') {\n    flattenedArray = flattenedArray.slice(2);\n    flattenedArray[0] = 'S';\n  } else {\n    throw new Error('Only cubic bezier curves are supported. ' + flattenedArray);\n  }\n  return new PathArray(flattenedArray);\n}\n\nexport function flip(pathArray: PathArray, how: 'x' | 'y'): PathArray {\n  let flattenedArray = pathArray.flat();\n  let numberCounter = 0;\n\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const element = flattenedArray[index];\n    if (typeof element === 'number') {\n      if (how === 'y') {\n        // if element is at an even-numbered position it's an x coordidante otherwise a y coordinate\n        flattenedArray[index] = numberCounter % 2 === 0 ? element : -element;\n      }\n      if (how === 'x') {\n        // if element is at an even-numbered position it's an x coordidante otherwise a y coordinate\n        flattenedArray[index] = numberCounter % 2 === 1 ? element : -element;\n      }\n      numberCounter += 1;\n    }\n  }\n  return new PathArray(flattenedArray);\n}\n\nexport function flipY(pathArray: PathArray): PathArray {\n  return flip(pathArray, 'y');\n}\n\nexport function flipX(pathArray: PathArray): PathArray {\n  return flip(pathArray, 'x');\n}\n\nexport function flipXY(pathArray: PathArray): PathArray {\n  return flip(flip(pathArray, 'x'), 'y');\n}\n\nexport function scale(pathArray: PathArray, factor: number): PathArray {\n  // scale path relative to 0,0 means we simply multiply all numbers by factor\n  let flattenedArray = pathArray.flat();\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const value = flattenedArray[index];\n    if (typeof value === 'number') {\n      flattenedArray[index] = value * factor;\n    }\n  }\n  return new PathArray(flattenedArray);\n}\n\nexport function noise(pathArray: PathArray, factor: number = 10, seed?: string): PathArray {\n  // TODO: adding noise to control points creates weird artifacts.\n  const rng = seedrandom(seed);\n  let flattenedArray = pathArray.flat();\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const value = flattenedArray[index];\n    if (typeof value === 'number') {\n      flattenedArray[index] = value + factor * rng();\n    }\n  }\n  return new PathArray(flattenedArray);\n}\n\nexport function small(pathArray: PathArray): PathArray {\n  return scale(pathArray, 0.5);\n}\n\nexport function big(pathArray: PathArray): PathArray {\n  return scale(pathArray, 2.0);\n}\n\nexport function toPointArray(pathArray: PathArray): PointArray {\n  let flattenedArray = pathArray.flat();\n  let output: number[] = [];\n\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const element = flattenedArray[index];\n    if (typeof element === 'number') {\n      output = output.concat(element);\n    }\n  }\n  return new PointArray(output);\n}\n\n/* \nRotate points around origin depending on their distance from the origin\n*/\nexport function bend(pathArray: PathArray): PathArray {\n  let flattenedArray = pathArray.flat();\n  let numberCounter = 0;\n  let lastX = 0;\n\n  for (let index = 0; index < flattenedArray.length; index++) {\n    const element = flattenedArray[index];\n    if (typeof element === 'number') {\n      if (numberCounter % 2 === 0) {\n        // is x coordinate\n        lastX = element;\n      } else {\n        const x = lastX;\n        const y = element;\n        const r = Math.sqrt(x * x + y * y);\n        const angle = (2 * Math.PI * r) / 100000;\n        const newX = x * Math.cos(angle) - y * Math.sin(angle);\n        const newY = x * Math.sin(angle) + y * Math.cos(angle);\n        flattenedArray[index] = newY;\n        flattenedArray[index - 1] = newX;\n      }\n      numberCounter++;\n    }\n  }\n  return new PathArray(flattenedArray);\n}\n\nexport function pathCompose(segments: PathArray[], modifier = (p: PathArray) => p): PathArray {\n  // we assume that the last two numbers in a path segment are the end point of the path so far.\n  // That end point will be the starting point of the next segment.\n  // each segment is encoded as if starting at 0,0 so the segment has to be translated to new coordinates before appending.\n  // let modifierFunc = smooth//(l:PathArray) => l\n  // if (modifier) modifierFunc = modifier\n\n  let output = new PathArray();\n  if (segments[0].flat()[0] !== 'M') {\n    output = output = new PathArray('M 0 0');\n  }\n\n  segments.forEach((segment) => {\n    const flattenedOutput = output.flat();\n    let flattenedSegment = segment.flat();\n    if (flattenedSegment[0] === 'M') flattenedSegment = flattenedSegment.slice(3);\n    const x = flattenedOutput[flattenedOutput.length - 2];\n    const y = flattenedOutput[flattenedOutput.length - 1];\n    let numberCounter = 0;\n\n    if (typeof x !== 'number' || typeof y !== 'number') return output;\n    for (let index = 0; index < flattenedSegment.length; index++) {\n      const element = flattenedSegment[index];\n      if (typeof element === 'number') {\n        // if element is at an even-numbered position it's an x coordidante otherwise a y coordinate\n        flattenedSegment[index] = element + (numberCounter % 2 === 0 ? x : y);\n        numberCounter += 1;\n      }\n    }\n    output = output.concat(modifier(new PathArray(flattenedSegment))) as PathArray;\n  });\n\n  return output;\n}\n\nexport function quickDrawPath(elementID: string, pathArray: PathArray): Path {\n  const draw: Svg = SVG().addTo(elementID).size('100%', '100%');\n  const path = draw.path(pathArray).fill('none').stroke({ color: '#000', width: 3 });\n  return path;\n}\n\nexport function simpleLinearGradient(stops: string[], orientation = 90) {\n  const gradientSpec: GradientSpec = {\n    type: 'linear',\n    block: (add) => {\n      for (let i = 0; i < stops.length; i++) {\n        add.stop(i / (stops.length - 1), stops[i]);\n      }\n    },\n    orientation,\n  };\n  return gradientSpec;\n}\n","import { PathArray } from '@svgdotjs/svg.js';\nimport seedrandom from 'seedrandom';\nimport { pathCompose, flipY, flipX, flipXY, small, big } from './utils';\nexport type pathLibrary = { [key: string]: PathArray };\n\n////////////////////////////////////////////////////////////////////////////////////\n// basic blocks\n////////////////////////////////////////////////////////////////////////////////////\nconst loopSegment = new PathArray('C 25 50 25 100 0 100');\nconst reverseLoopSegment = new PathArray('C 25 0 25 50 0 100');\nconst curveSegment90 = new PathArray('C 50 0 100 50 100 100');\nconst reverseCurveSegment90 = new PathArray('C 0 50 50 100 100 100');\nconst curveSegment45 = new PathArray('C 50 25 75 50 100 100');\nconst reverseCurveSegment45 = new PathArray('C 25 50 50 75 100 100');\nconst connectorSegment = new PathArray('C 50 25 90 25 100 25');\nconst reverseConnectorSegment = new PathArray('C 10 0 50 0 100 25');\nconst horizontalrSegment = new PathArray('C 25 0 25 0 25 0');\n\nexport const basicBlocks: pathLibrary = {\n  loopSegment,\n  reverseLoopSegment,\n  curveSegment45,\n  reverseCurveSegment45,\n  curveSegment90,\n  reverseCurveSegment90,\n  connectorSegment,\n  reverseConnectorSegment,\n  horizontalrSegment,\n};\n\n////////////////////////////////////////////////////////////////////////////////////\n// composite shapes\n////////////////////////////////////////////////////////////////////////////////////\nexport const loop = pathCompose([\n  curveSegment45,\n  loopSegment,\n  flipXY(reverseLoopSegment),\n  flipY(reverseCurveSegment45),\n]);\nexport const crest = pathCompose([curveSegment45, flipY(reverseCurveSegment45)], (l) => l);\nexport const connector = pathCompose([connectorSegment, flipY(reverseConnectorSegment)]);\nexport const twistConnector = pathCompose([connectorSegment, reverseConnectorSegment]);\nexport const drop = pathCompose([\n  curveSegment90,\n  flipX(loopSegment),\n  small(small(horizontalrSegment)),\n  flipY(reverseLoopSegment),\n  flipY(reverseCurveSegment90),\n]);\n\nexport const compositeShapes: pathLibrary = {\n  loop,\n  crest,\n  connector,\n  twistConnector,\n  drop,\n};\n\nexport interface LoopyLineParams {\n  numElements: number;\n  variability: number;\n  smoothness: number;\n  baseRadius: number;\n}\n\nexport function loopyLine(params: LoopyLineParams): PathArray {\n  // TODO: make loopy line procedural\n  return pathCompose([\n    new PathArray(['M 0 0']),\n    small(flipY(crest)),\n    twistConnector,\n    small(loop),\n    big(flipY(loop)),\n    connector,\n  ]);\n}\n\n////////////////////////////////////////////////////////////////////////////////////\n// closed shapes\n////////////////////////////////////////////////////////////////////////////////////\n\nexport function nPointRadial(radialDistances: number[], smoothness: number = 0.5): PathArray {\n  const offset = { x: 100, y: 100 };\n  let output = new PathArray(['M', offset.x, offset.y + radialDistances[0]]);\n  const numSegments = radialDistances.length;\n\n  for (let i = 1; i < radialDistances.length + 1; i++) {\n    const r = radialDistances[i % numSegments];\n    const deltaR = radialDistances[i % numSegments] - radialDistances[(i - 1) % numSegments];\n    const controlpointLength = (((Math.abs(deltaR) / r + 0.5) * smoothness * r) / numSegments) * 2 * Math.PI;\n    const x = r * Math.sin((i * 2 * Math.PI) / numSegments) + offset.x;\n    const y = r * Math.cos((i * 2 * Math.PI) / numSegments) + offset.y;\n    const dX = -Math.cos((i * 2 * Math.PI) / numSegments) * controlpointLength;\n    const dY = Math.sin((i * 2 * Math.PI) / numSegments) * controlpointLength;\n    const controlPointX = x + dX;\n    const controlPointY = y + dY;\n\n    if (i === 1) {\n      output = output.concat([\n        'C',\n        controlpointLength + offset.x,\n        radialDistances[0] + offset.y,\n        controlPointX,\n        controlPointY,\n        x,\n        y,\n      ]) as PathArray;\n    } else {\n      output = output.concat(['S', controlPointX, controlPointY, x, y]) as PathArray;\n    }\n  }\n\n  output = output.concat(['z']) as PathArray;\n\n  return output;\n}\n\nexport interface ClosedPathParams {\n  numPoints: number;\n  variability: number;\n  smoothness: number;\n  baseRadius: number;\n  seed?: string;\n}\n\nexport function closedPath(params: ClosedPathParams): PathArray {\n  const rng = seedrandom(params.seed);\n  const oddNumberedBaseRadius = params.baseRadius - params.variability;\n  const radii = new Array(params.numPoints);\n  for (let i = 0; i < params.numPoints; i++) {\n    const currentBaseRadius = i % 2 === 0 ? params.baseRadius : oddNumberedBaseRadius;\n    radii[i] = currentBaseRadius + (rng() - 0.5) * params.variability;\n  }\n  return nPointRadial(radii, params.smoothness);\n}\n\nexport const blob2 = nPointRadial([75, 75]);\nexport const blob3 = nPointRadial([75, 75, 20]);\nexport const blob4 = nPointRadial([75, 75, 20, 90]);\nexport const blob5 = nPointRadial([75, 75, 20, 100, 25]);\n\nexport const closedShapes: pathLibrary = {\n  blob2,\n  blob3,\n  blob4,\n  blob5,\n};\n","import { createTheme, responsiveFontSizes } from '@mui/material/styles';\n\ndeclare module '@mui/material/styles' {\n  interface TypographyVariants {\n    code: React.CSSProperties;\n  }\n\n  // allow configuration using `createTheme`\n  interface TypographyVariantsOptions {\n    code?: React.CSSProperties;\n  }\n}\n\n// Update the Typography's variant prop options\ndeclare module '@mui/material/Typography' {\n  interface TypographyPropsVariantOverrides {\n    code: true;\n  }\n}\n\nexport const theme = responsiveFontSizes(\n  createTheme({\n    typography: {\n      h1: {\n        fontSize: '3rem',\n      },\n      h2: {\n        fontSize: '3rem',\n      },\n      h3: {\n        fontSize: '2rem',\n      },\n      body1: {\n        fontSize: '1.2rem',\n      },\n      code: {\n        fontFamily: \"source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace\",\n        fontSize: '1.2rem',\n        letterSpacing: '0.1rem',\n      },\n      overline: {\n        lineHeight: '1em',\n      },\n    },\n    palette: {\n      background: {\n        default: '#FEFCFA',\n        paper: '#FDFAF9',\n      },\n      primary: {\n        // light: will be calculated from palette.primary.main,\n        main: '#FF003B',\n        // dark: will be calculated from palette.primary.main,\n        // contrastText: will be calculated to contrast with palette.primary.main\n      },\n      secondary: {\n        // light: will be calculated from palette.primary.main,\n        main: '#CE07FF',\n        // dark: will be calculated from palette.secondary.main,\n        // contrastText: '#ffcc00',\n      },\n      // Used by `getContrastText()` to maximize the contrast between\n      // the background and the text.\n      contrastThreshold: 3,\n      // Used by the functions below to shift a color's luminance by approximately\n      // two indexes within its tonal palette.\n      // E.g., shift from Red 500 to Red 300 or Red 700.\n      tonalOffset: 0.2,\n    },\n    components: {\n      MuiButton: {\n        defaultProps: {\n          variant: 'contained',\n        },\n      },\n    },\n    // spacing: 2,\n  }),\n);\n","import { Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { ReactNode } from 'react';\nimport { Blob } from '../../lib/shapelib';\nimport { simpleLinearGradient } from '../../lib/shapelib/utils';\nimport { theme } from '../../theme';\nimport styles from './Hero.module.css';\n\nconst secondaryColor = theme.palette.secondary.light.toString();\nconst primaryColor = theme.palette.primary.light.toString();\nconst fill = simpleLinearGradient([secondaryColor, primaryColor], -30);\n\ntype HeroProps = {\n  title: ReactNode;\n  subTitle: ReactNode;\n  buttons?: ReactNode;\n  lineColor?: string;\n};\n\nconst shapeProps: React.ComponentProps<typeof Blob> = {\n  complexity: 14,\n  stroke: 'none',\n  fill: fill,\n  variability: 40,\n  smoothness: 0.5,\n};\n\nexport const Hero = ({ title, subTitle, buttons = [] }: HeroProps) => {\n  return (\n    <div className={styles.heroOuterDiv}>\n      <Box className={styles.blobContainer}>\n        <Blob style={{ width: '24rem' }} {...shapeProps} />\n      </Box>\n      <div style={{ margin: '5em 0' }}>\n        <Typography variant=\"h1\">{title}</Typography>\n        <Typography variant=\"h2\">{subTitle}</Typography>\n        <>{buttons}</>\n      </div>\n    </div>\n  );\n};\n","import { Box, BoxProps } from '@mui/material';\n\nexport const Section = (props: BoxProps) => (\n  <Box\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    minHeight=\"30rem\"\n    margin=\"auto\"\n    padding=\"3rem 0 3rem 0\"\n    position=\"relative\"\n    {...props}\n  />\n);\n","import { ShapeComponent, ShapeKind, ShapeProps } from '../../lib/shapelib';\nimport styles from './SideBlob.module.css';\n\nexport const SideBlob: React.FC<Partial<ShapeProps>> = (props) => (\n  <ShapeComponent\n    {...props}\n    kind={ShapeKind.CLOSED}\n    complexity={7}\n    variability={30}\n    className={styles.sideblob}\n    stroke=\"none\"\n    fill=\"#bbb3\"\n  />\n);\n","import { Button, Grid, Paper, Typography, useTheme } from '@mui/material';\n\nexport type CodeBlockProps = {\n  code: string;\n  docsURL?: string;\n};\n\nexport const CodeBlock = (props: CodeBlockProps) => {\n  const theme = useTheme();\n  return (\n    <>\n      <Paper sx={{ padding: theme.spacing(1), margin: theme.spacing(1, 0), overflow: 'hidden' }}>\n        <Typography variant=\"code\" sx={{ whiteSpace: 'pre-wrap' }}>\n          {props.code}\n        </Typography>\n      </Paper>\n      <Grid container spacing={1}>\n        <Grid item md={3} xs={12} sm={6}>\n          {props.docsURL ? (\n            <Button size=\"small\" sx={{ width: '100%' }} variant=\"outlined\" href={props.docsURL}>\n              Read Docs\n            </Button>\n          ) : (\n            ''\n          )}\n        </Grid>\n        <Grid item md={3} xs={12} sm={6}>\n          <Button\n            size=\"small\"\n            variant=\"outlined\"\n            onClick={() => navigator.clipboard.writeText(props.code)}\n            sx={{ width: '100%' }}\n          >\n            Copy\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n","import { Container, Grid, Typography } from '@mui/material';\nimport { CodeBlock } from '../Base/CodeBlock';\n\nconst reactCode = `import ShapeComponent from shapelib\nexport const MyComponent = () => (\n    <ShapeComponent type=\"blob\"/>\n    ...\n)\n`;\n\nconst plainJSCode = `<script .../>\n\nshapelib.draw(target, params, ...)\n\n\n`;\n\nexport type HowToBlockProps = {\n  title: string;\n  code: string;\n  url: string;\n};\nconst HowToBlock = (props: HowToBlockProps) => {\n  const { title, code, url } = props;\n  return (\n    <>\n      <Typography variant=\"h3\">{title}</Typography>\n      <CodeBlock code={code} docsURL={url} />\n    </>\n  );\n};\n\nexport const HowTo = () => {\n  return (\n    <Container>\n      <Grid container spacing={4} sx={{ textAlign: 'left' }}>\n        <Grid item xs={12} md={6}>\n          <HowToBlock title=\"React JS\" code={reactCode} url=\"https://github.com/helloswyg/autoshapes-example\" />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <HowToBlock title=\"Plain JS\" code={plainJSCode} url=\"https://github.com/helloswyg/autoshapes-example\" />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import { Grid, Paper, Typography } from '@mui/material';\nimport { ReactNode } from 'react';\n\nexport type GalleryProps = {\n  title: string;\n  items: ReactNode[];\n};\n\nconst GalleryItem: React.FC<{}> = (props) => {\n  return (\n    <Paper\n      sx={{\n        minWidth: '5rem',\n        minHeight: '5rem',\n        height: '100%',\n      }}\n    >\n      {props.children}\n    </Paper>\n  );\n};\n\nexport const Gallery = (props: GalleryProps) => {\n  return (\n    <div>\n      <Typography variant=\"h3\">{props.title}</Typography>\n      <Grid container spacing={1} justifyContent=\"center\">\n        {props.items.map((item, index) => (\n          <Grid item xs={6} md={3} key={index}>\n            <GalleryItem>{item}</GalleryItem>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n","import { Container, Stack, Typography, useTheme } from '@mui/material';\nimport { ReactNode } from 'react';\nimport { Gallery } from '../Base/Gallery/Gallery';\n\ninterface ShapeSpec {\n  name: string;\n  shape: ReactNode;\n}\n\nexport type ShapeGalleryProps = {\n  title: string;\n  shapes: ShapeSpec[];\n};\n\nconst ShapeItem = (props: ShapeSpec) => {\n  const theme = useTheme();\n  return (\n    <Container sx={{ padding: theme.spacing(2), height: '100%' }}>\n      <Stack justifyContent=\"space-between\" alignItems=\"center\" height=\"100%\">\n        <Typography variant=\"overline\">{props.name}</Typography>\n        <div style={{ width: '8rem', margin: 'auto' }}>{props.shape}</div>\n      </Stack>\n    </Container>\n  );\n};\n\nexport const ShapeGallery = (props: ShapeGalleryProps) => (\n  <Gallery title={props.title} items={props.shapes.map(ShapeItem)} />\n);\n","import { Container, Stack, Typography } from '@mui/material';\nimport { Blob } from '../../lib/shapelib';\nimport { simpleLinearGradient } from '../../lib/shapelib/utils';\nimport { ShapeGallery } from '../ShapeComponents/ShapeGallery';\nimport { theme } from '../../theme';\n\nconst secondaryColor = theme.palette.secondary.light.toString();\nconst primaryColor = theme.palette.primary.light.toString();\nconst fill = simpleLinearGradient([secondaryColor, primaryColor], -30);\n\nconst geometricParams: React.ComponentProps<typeof Blob> = {\n  fill: fill,\n  stroke: 'none',\n};\nconst geometricSet = [\n  {\n    name: '3-Point',\n    shape: <Blob {...geometricParams} complexity={3} />,\n  },\n  {\n    name: '4-Point',\n    shape: <Blob {...geometricParams} complexity={4} />,\n  },\n  {\n    name: '5-Point',\n    shape: <Blob {...geometricParams} complexity={5} />,\n  },\n  {\n    name: '6-Point',\n    shape: <Blob {...geometricParams} complexity={6} />,\n  },\n];\n\nconst smoothingParams: React.ComponentProps<typeof Blob> = {\n  fill: fill,\n  complexity: 3,\n  stroke: 'none',\n};\nconst smoothingSet = [0, 0.1, 0.5, 0.8].map((item) => ({\n  name: `Smoothing=${item}`,\n  shape: <Blob {...smoothingParams} smoothness={item} />,\n}));\n\nconst complexVariableParams: React.ComponentProps<typeof Blob> = {\n  fill: fill,\n  variability: 50,\n  smoothness: 0.5,\n  stroke: 'none',\n};\nconst complexVariableSet = [3, 3, 10, 10].map((item) => ({\n  name: 'Random Variant',\n  shape: <Blob {...complexVariableParams} complexity={item} />,\n}));\n\nconst fillVariationsParams: React.ComponentProps<typeof Blob> = {\n  fill: fill,\n  complexity: 5,\n  smoothness: 0.5,\n};\nconst fillVariationsSet = [\n  {\n    name: 'Outline',\n    shape: <Blob {...fillVariationsParams} fill=\"none\" />,\n  },\n  {\n    name: 'Solid Color',\n    shape: <Blob {...fillVariationsParams} fill={primaryColor} />,\n  },\n  {\n    name: 'Gradient',\n    shape: <Blob {...fillVariationsParams} />,\n  },\n  {\n    name: 'No Stroke',\n    shape: <Blob {...fillVariationsParams} stroke=\"none\" />,\n  },\n];\n\nexport const VariationsGallery = () => {\n  return (\n    <Container>\n      <Typography variant=\"h2\">Shape Families </Typography>\n      <Typography variant=\"subtitle1\">\n        Shape Families give consistent but unique style throughout your project\n      </Typography>\n      <Stack spacing={2}>\n        <ShapeGallery key={1} title=\"Simple Geometric Shapes\" shapes={geometricSet} />\n        <ShapeGallery key={2} title=\"Configure smoothness\" shapes={smoothingSet} />\n        <ShapeGallery key={3} title=\"Variable Shapes\" shapes={complexVariableSet} />\n        <ShapeGallery key={4} title=\"Variable Style\" shapes={fillVariationsSet} />\n      </Stack>\n    </Container>\n  );\n};\n","import { Paper, Typography, Box, useTheme } from '@mui/material';\nimport { ReactNode } from 'react';\n\ntype TextBlockProps = {\n  title: ReactNode;\n};\n\nexport const TextBlock: React.FC<TextBlockProps> = (props) => {\n  const theme = useTheme();\n  return (\n    <Paper sx={{ opacity: 0.95 }}>\n      <Box padding={theme.spacing(10, 4)}>\n        <Typography variant=\"h2\">{props.title}</Typography>\n        <Typography variant=\"body1\">{props.children}</Typography>\n      </Box>\n    </Paper>\n  );\n};\n","import { useTheme } from '@mui/material';\nimport { Blob } from '../../lib/shapelib';\nimport { TextBlock } from '../Base/TextBlock';\nimport styles from './TextBoxExample.module.css';\n\nconst blobProps = {\n  stroke: 'none',\n  variability: 20,\n  complexity: 3,\n};\n\nexport const TextBoxExample = () => {\n  const theme = useTheme();\n  const primary = theme.palette.primary.main.toString();\n  const secondary = theme.palette.secondary.main.toString();\n  const secondaryLight = theme.palette.secondary.light.toString();\n\n  return (\n    <div style={{ position: 'relative', margin: theme.spacing(20, 2) }}>\n      <Blob className={styles.blob1} fill={primary} {...blobProps} />\n      <Blob className={styles.blob2} fill={secondary} {...blobProps} complexity={5} />\n      <Blob className={styles.blob3} fill={secondaryLight} transform={{ rotate: 20 }} {...blobProps} />\n      <TextBlock title=\"Add color and depth\">\n        By placing shapes either in fron or behind your content you can add depth without distracting from your content.\n      </TextBlock>\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './App.module.css';\nimport { Header } from '../Header';\nimport { Footer } from '../Footer';\nimport { Hero } from '../Hero';\nimport { Section } from '../Base/Section';\nimport { SideBlob } from '../ShapeComponents/SideBlob';\nimport { HowTo } from '../HowTo';\nimport { VariationsGallery } from '../VariationsGallery';\nimport { TextBoxExample } from '../TextBoxExample';\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <Header />\n      <Section>\n        <Hero\n          title={\n            <>\n              Beautiful <br /> procedurally generated shapes <br /> for your website\n            </>\n          }\n          subTitle={''}\n        />\n      </Section>\n      <Section>\n        <HowTo />\n      </Section>\n      <Section>\n        <SideBlob />\n        <VariationsGallery />\n      </Section>\n      {/* <Section >\n        <AccentBlobsExample />\n      </Section> */}\n      <Section>\n        <TextBoxExample />\n      </Section>\n      <Footer />\n    </div>\n    // </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport { ThemeProvider } from '@mui/material/styles';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from './theme';\nimport { CssBaseline } from '@mui/material';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}